# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
    rules:
        avoid_print: false # Uncomment to disable the `avoid_print` rule
        prefer_single_quotes: true # Uncomment to enable the `prefer_single_quotes` rule

analyzer:
    exclude:
        - '**/*.g.dart'
        - '**/*.freezed.dart'
    errors:
        invalid_annotation_target: ignore
    plugins:
        - dart_code_metrics

dart_code_metrics:
    extends:
        - package:dart_code_metrics_presets/all.yaml
    anti-patterns:
        - long-method
        - long-parameter-list
    metrics:
        cyclomatic-complexity: 20
        maximum-nesting-level: 5
        number-of-parameters: 4
        source-lines-of-code: 50
    metrics-exclude:
        - test/**
    rules:
        - newline-before-return
        - no-boolean-literal-compare
        - no-empty-block
        - prefer-trailing-comma
        - prefer-conditional-expressions
        - no-equal-then-else
        - prefer-extracting-callbacks: false
        - arguments-ordering:
              child-last: true
        - prefer-correct-identifier-length:
              exceptions: ['a']
              max-identifier-length: 30
              min-identifier-length: 2
        - no-equal-arguments:
              ignored-parameters:
                  - height
                  - width
        - prefer-match-file-name:
              exclude:
                  - lib/constants/**
